package com.djigitbet.djigitbet.Controller;import com.djigitbet.djigitbet.Model.Entity.Message;import com.djigitbet.djigitbet.Repositories.IMessageRepository;import com.djigitbet.djigitbet.Services.MessagePersistenceService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Import;import org.springframework.data.domain.Page;import org.springframework.messaging.handler.annotation.MessageMapping;import org.springframework.messaging.handler.annotation.Payload;import org.springframework.messaging.handler.annotation.SendTo;import org.springframework.messaging.simp.SimpMessageHeaderAccessor;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import java.util.List;import java.util.concurrent.CompletableFuture;@Controller@RestControllerpublic class GroupChatController {          @Autowired      private MessagePersistenceService messagePersistenceService;    @GetMapping("/chat/getoldmsgpaged/{pageNo}/{pageSize}")    public List<Message> getallpaged(@PathVariable int pageNo, @PathVariable int pageSize)    {        var a = messagePersistenceService.getPageedMessages(pageNo, pageSize);        return a;    }    @MessageMapping("/chat.register")    @SendTo("/topic/public")    public  Message  register(@Payload Message chatMessage, SimpMessageHeaderAccessor headerAccessor) {        headerAccessor.getSessionAttributes().put("username", chatMessage.getSender());                return chatMessage;    }    @MessageMapping("/chat.send")    @SendTo("/topic/public")    public Message sendMessage(@Payload Message chatMessage) {        CompletableFuture.supplyAsync(()->{            messagePersistenceService.saveMessage(chatMessage);            return chatMessage;        });        return chatMessage;    }}